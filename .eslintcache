[{"H:\\ReactJs\\FundooNotes\\src\\index.js":"1","H:\\ReactJs\\FundooNotes\\src\\App.js":"2","H:\\ReactJs\\FundooNotes\\src\\reportWebVitals.js":"3","H:\\ReactJs\\FundooNotes\\src\\component\\registration\\registration.jsx":"4","H:\\ReactJs\\FundooNotes\\src\\component\\resetPassword\\resetPassword.jsx":"5","H:\\ReactJs\\FundooNotes\\src\\component\\forgotPassword\\forgotPassword.jsx":"6","H:\\ReactJs\\FundooNotes\\src\\component\\login\\login.jsx":"7","H:\\ReactJs\\FundooNotes\\src\\component\\protectedRoute\\protectedRoute.js":"8","H:\\ReactJs\\FundooNotes\\src\\component\\dashboard\\dashboard.jsx":"9","H:\\ReactJs\\FundooNotes\\src\\Services\\userService.js":"10","H:\\ReactJs\\FundooNotes\\src\\Services\\axiosService.js":"11","H:\\ReactJs\\FundooNotes\\src\\component\\addNote\\addNote.jsx":"12","H:\\ReactJs\\FundooNotes\\src\\component\\displayNote\\displayNote.jsx":"13","H:\\ReactJs\\FundooNotes\\src\\Services\\noteService.js":"14","H:\\ReactJs\\FundooNotes\\src\\component\\note\\note.jsx":"15","H:\\ReactJs\\FundooNotes\\src\\component\\iconMenu\\iconButtons.jsx":"16","H:\\ReactJs\\FundooNotes\\src\\component\\iconMenu\\moreMenu.jsx":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":1044,"mtime":1610172710233,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":14693,"mtime":1610013660916,"results":"22","hashOfConfig":"19"},{"size":5175,"mtime":1609395327113,"results":"23","hashOfConfig":"19"},{"size":3496,"mtime":1609395362708,"results":"24","hashOfConfig":"19"},{"size":6061,"mtime":1610136276011,"results":"25","hashOfConfig":"19"},{"size":826,"mtime":1610189532918,"results":"26","hashOfConfig":"19"},{"size":9445,"mtime":1610284535965,"results":"27","hashOfConfig":"19"},{"size":745,"mtime":1610086088680,"results":"28","hashOfConfig":"19"},{"size":294,"mtime":1610255035453,"results":"29","hashOfConfig":"19"},{"size":5779,"mtime":1610195318240,"results":"30","hashOfConfig":"19"},{"size":698,"mtime":1610294407635,"results":"31","hashOfConfig":"19"},{"size":850,"mtime":1610284531595,"results":"32","hashOfConfig":"19"},{"size":351,"mtime":1610284701339,"results":"33","hashOfConfig":"19"},{"size":3839,"mtime":1610286658043,"results":"34","hashOfConfig":"19"},{"size":2379,"mtime":1610274502795,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1bt7gv7",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\ReactJs\\FundooNotes\\src\\index.js",[],["74","75"],"H:\\ReactJs\\FundooNotes\\src\\App.js",[],"H:\\ReactJs\\FundooNotes\\src\\reportWebVitals.js",[],"H:\\ReactJs\\FundooNotes\\src\\component\\registration\\registration.jsx",["76","77","78"],"import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './registration.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport 'fontsource-roboto';\r\nimport UserService from '../../Services/userService';\r\nimport { Link } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst service = new UserService();\r\n\r\nexport default class registration extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            firstName: \"\",\r\n            firstNameErr: false,\r\n            firstNameMsg: \"\",\r\n            lastName: \"\",\r\n            lastNameErr: false,\r\n            lastNameMsg: \"\",\r\n            email: \"\",\r\n            emailErr: false, \r\n            emailMsg: \"\",\r\n            password: \"\",\r\n            passwordErr: false,\r\n            passwordMsg: \"\",\r\n            confirmPassword: \"\",\r\n            confirmPasswordErr: false,\r\n            confirmPasswordMsg: \"\",\r\n            hidden: true,\r\n            snackbarOpen: false,\r\n            snackbarMsg: \"\"\r\n        };\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleConfirmPasswordChange = this.handleConfirmPasswordChange.bind(this);\r\n        this.toggleShow = this.toggleShow.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) =>{\r\n        this.setState({snackbarOpen:false})\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    validate = () => {\r\n        this.setState({\r\n            firstNameErr: false,\r\n            firstNameMsg: \"\",\r\n            lastNameErr: false,\r\n            lastNameMsg: \"\",         \r\n            emailErr: false, \r\n            emailMsg: \"\",\r\n            passwordErr: false,\r\n            passwordMsg: \"\",\r\n            confirmPasswordErr: false,\r\n            confirmPasswordMsg: \"\",\r\n        })\r\n\r\n        let isValid = false\r\n\r\n        const firstNameRegex = new RegExp(/^[A-Z]{1}[a-zA-Z]{2,}$/);\r\n        if(this.state.firstName.length > 0 && !firstNameRegex.test(this.state.firstName)){\r\n            this.setState({\r\n                firstNameErr: true,\r\n                firstNameMsg: 'First name Invalid'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        if(this.state.firstName.length === 0 ){\r\n            this.setState({\r\n                firstNameErr: true,\r\n                firstNameMsg: 'Required'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        const lastNameRegex = new RegExp(/^[A-Z]{1}[a-zA-Z]{2,}$/);\r\n        if(this.state.lastName.length > 0 && !lastNameRegex.test(this.state.lastName)){\r\n            this.setState({\r\n                lastNameErr: true,\r\n                lastNameMsg: 'Last name invalid'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        if(this.state.lastName.length === 0 ){\r\n            this.setState({\r\n                lastNameErr: true,\r\n                lastNameMsg: 'Required'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        const emailRegex = new RegExp(/^([A-Za-z0-9]){2,}([.]?)([A-Za-z0-9]){2,}@([a-z])+([.][a-z]{2,})+$/);\r\n        if(this.state.email.length > 0 && !emailRegex.test(this.state.email)){\r\n            this.setState({\r\n                emailErr: true,\r\n                emailMsg: 'Invalid Email'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        if(this.state.email.length === 0 ){\r\n            this.setState({\r\n                emailErr: true,\r\n                emailMsg: 'Required'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        const passwordRegex = RegExp(/^(?=.+[0-9])(?=.+[a-z])(?=.+[!@#$%^&*])(?=.+[A-Z])(?=.*[a-zA-Z]).{8,}/);\r\n        if(this.state.password.length > 0 && !passwordRegex.test(this.state.password)){\r\n            this.setState({\r\n                passwordErr: true,\r\n                passwordMsg: 'Follow password rules'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        if(this.state.password.length === 0){\r\n            this.setState({\r\n                passwordErr: true,\r\n                passwordMsg: 'Required'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        const confirmPasswordRegex = RegExp(/^(?=.+[0-9])(?=.+[a-z])(?=.+[!@#$%^&*])(?=.+[A-Z])(?=.*[a-zA-Z]).{8,}/);\r\n        if(this.state.confirmPassword.length > 0 && !confirmPasswordRegex.test(this.state.confirmPassword)){\r\n            this.setState({\r\n                confirmPasswordErr: true,\r\n                confirmPasswordMsg: \"Follow password rules\"\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        if(this.state.confirmPassword.length === 0){\r\n            this.setState({\r\n                confirmPasswordErr: true,\r\n                confirmPasswordMsg: 'Required'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        if(this.state.password !== this.state.confirmPassword){\r\n            this.setState({\r\n                confirmPasswordErr:true,\r\n                confirmPasswordMsg: 'Password Mismatch'\r\n            })\r\n            isValid= true\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    submit = (event) =>{\r\n        // event.preventDefault();\r\n        if(this.validate()){\r\n            console.log('Registration failed');\r\n            \r\n        }else{\r\n           \r\n            console.log('Registration Sucessful', this.state.firstName, this.state.lastName, this.state.email, this.state.password, this.state.confirmPassword);\r\n            let userData = {\r\n                \"firstName\" : this.state.firstName,\r\n                \"lastName\" : this.state.lastName,\r\n                \"email\" : this.state.email,\r\n                \"password\": this.state.password,\r\n                \"service\": \"advanced\"\r\n            }\r\n            service.registration(userData)\r\n            .then(data => {\r\n                \r\n                console.log(data);\r\n                this.setState({snackbarOpen: true, snackbarMsg: 'Registered Successfully!'})\r\n                this.props.history.push(\"/login\");\r\n                \r\n            })\r\n            .catch(error =>{\r\n                \r\n                console.log(error);   \r\n                this.setState({snackbarOpen: true, snackbarMsg: 'Failed!'})\r\n            }) \r\n        }\r\n    }\r\n\r\n    handleConfirmPasswordChange(e){\r\n        this.setState({ confirmPassword: e.target.value});\r\n    }\r\n\r\n    handlePasswordChange(e) {\r\n        this.setState({ password: e.target.value });\r\n        \r\n    }\r\n    \r\n    toggleShow() {\r\n        this.setState({ hidden: !this.state.hidden });\r\n      }\r\n    \r\n    componentDidMount() {\r\n        if (this.props.password) {\r\n          this.setState({ password: this.props.password });\r\n        }\r\n        if (this.props.confirmPassword) {\r\n            this.setState({confirmPassword: this.props.confirmPassword});\r\n          }\r\n      }\r\n\r\n    render(){ \r\n        return (\r\n            <div className=\"parent\">\r\n            <Snackbar\r\n                // anchorOrigin={{vertical:'center', horizontal:'left'}}\r\n                open = {this.state.snackbarOpen} \r\n                autoHideDuration = {3000}\r\n                onClose = {this.snackbarClose}\r\n                message ={<span id=\"message-id\">{this.state.snackbarMsg}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        arial-label=\"close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.snackbarClose}\r\n                    >\r\n                        x\r\n                    </IconButton>\r\n                ]}\r\n            />\r\n                <div className=\"child1\">\r\n                    <div className=\"heading\">  \r\n                    <span className=\"letter1\">F</span>\r\n                    <span className=\"letter2\">u</span>\r\n                    <span className=\"letter3\">n</span>\r\n                    <span className=\"letter4\">d</span>\r\n                    <span className=\"letter5\">o</span>\r\n                    <span className=\"letter6\">o</span>\r\n                    </div>\r\n                    <div className=\"textalign\">\r\n                        <span className=\"heading-second\">Create your Fundoo Account</span>\r\n                    </div>\r\n                    <form onSubmit={this.submit}>\r\n                        <div className=\"fields\">\r\n                                <TextField \r\n                                    type=\"text\"\r\n                                    className=\"mr\" \r\n                                    id=\"outlined-basic\" \r\n                                    label=\"First name\" \r\n                                    variant=\"outlined\" \r\n                                    size=\"small\" \r\n                                    name=\"firstName\" \r\n                                    onChange={this.handleChange}\r\n                                    error={this.state.firstNameErr}\r\n                                    helperText={this.state.firstNameMsg}\r\n\r\n                                />    \r\n                            <div className=\"mr2\">    \r\n                                <TextField\r\n                                    className=\"second-field\" \r\n                                    type=\"text\"\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Last name\" \r\n                                    variant=\"outlined\" \r\n                                    size=\"small\" \r\n                                    name=\"lastName\"\r\n                                    onChange={this.handleChange}\r\n                                    error={this.state.lastNameErr}\r\n                                    helperText={this.state.lastNameMsg}\r\n                                />                            \r\n                            </div>    \r\n                        </div>\r\n                        <div className=\"fields email-content\">\r\n                            <TextField \r\n                                id=\"outlined-full-width\" \r\n                                label=\"Your email address\" \r\n                                fullWidth variant=\"outlined\" \r\n                                size=\"small\" \r\n                                helperText=\"You can use letters, numbers & periods\" \r\n                                name=\"email\"\r\n                                onChange={this.handleChange}\r\n                                error={this.state.emailErr}\r\n                                helperText={this.state.emailMsg}\r\n                            />\r\n                            <div>\r\n                                <small>You can use letters, numbers & periods</small>\r\n                            </div>\r\n                        </div>                        \r\n                        <div className=\"fields\">   \r\n                                <TextField \r\n                                    className=\"mr\" \r\n                                    type={this.state.hidden ? 'text' : 'password'}\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Password\" \r\n                                    variant=\"outlined\"\r\n                                    size=\"small\" \r\n                                    name=\"password\"\r\n                                    onChange={this.handleChange}\r\n                                    error={this.state.passwordErr}\r\n                                    helperText={this.state.passwordMsg}\r\n                                    value={this.state.password}\r\n                                    onChange={this.handlePasswordChange}\r\n                                />                         \r\n                            <div className=\"mr2\">    \r\n                                <TextField\r\n                                    className=\"second-field\"                                    \r\n                                    id=\"outlined-basic\" \r\n                                    type={this.state.hidden ? 'text' : 'password'}\r\n                                    label=\"Confirm\" \r\n                                    variant=\"outlined\" \r\n                                    size=\"small\" \r\n                                    name=\"confirmPassword\"\r\n                                    onChange={this.handleChange}\r\n                                    error={this.state.confirmPasswordErr}\r\n                                    helperText={this.state.confirmPasswordMsg}\r\n                                    value={this.state.confirmPassword}\r\n                                    onChange={this.handleConfirmPasswordChange}\r\n                                />                            \r\n                            </div>    \r\n                        </div>\r\n                        <div className=\"password\">\r\n                            <span>\r\n                                Use 8 or more characters with a mix of letters, numbers & symbols\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"checkbox\">\r\n                            <div>\r\n                                <Checkbox\r\n                                    className=\"checkbox\"\r\n                                    defaultChecked\r\n                                    color=\"primary\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    onClick={this.toggleShow}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <span>Show password</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"button\">\r\n                            <Button component={Link} to=\"/login\" href=\"#text-buttons\" color=\"primary\" >\r\n                                Sign in instead\r\n                            </Button>                \r\n                            <Button type=\"submit\" className=\"submit-btn\" variant=\"contained\" color=\"primary\" onClick={this.submit}>\r\n                                submit\r\n                            </Button>\r\n                            <Snackbar />\r\n                        </div>   \r\n                    </form>\r\n                </div>\r\n                <div className=\"child2\">\r\n                    <div>\r\n                        <img src=\"/images/account.svg\" alt=\"\"  width=\"244\" height=\"244\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }   \r\n}\r\n\r\n\r\n","H:\\ReactJs\\FundooNotes\\src\\component\\resetPassword\\resetPassword.jsx",[],"H:\\ReactJs\\FundooNotes\\src\\component\\forgotPassword\\forgotPassword.jsx",[],"H:\\ReactJs\\FundooNotes\\src\\component\\login\\login.jsx",[],"H:\\ReactJs\\FundooNotes\\src\\component\\protectedRoute\\protectedRoute.js",["79","80","81"],"import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n\r\nexport default function ProtectedRoute({ component: Component, ...rest }) {\r\n\r\n    const auth = false;\r\n    const token = localStorage.getItem(\"userToken\");\r\n\r\n    const isAuthenticated = () => {\r\n        console.log(token);\r\n        console.log(\"Reached\");\r\n        return (token ? auth = true : auth = false);\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <Route {...rest} render={props => {\r\n            if (isAuthenticated) {\r\n                console.log(\"authenticated\");\r\n                return <Component {...props} />;\r\n            }\r\n            else {\r\n                console.log(\"exit\");\r\n                return <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n            }\r\n        }\r\n        } />\r\n    );\r\n}\r\n","H:\\ReactJs\\FundooNotes\\src\\component\\dashboard\\dashboard.jsx",["82","83","84","85"],"H:\\ReactJs\\FundooNotes\\src\\Services\\userService.js",[],"H:\\ReactJs\\FundooNotes\\src\\Services\\axiosService.js",[],"H:\\ReactJs\\FundooNotes\\src\\component\\addNote\\addNote.jsx",["86","87","88","89","90","91","92","93","94","95","96"],"import React, { useState } from 'react';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport BrushOutlinedIcon from '@material-ui/icons/BrushOutlined';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport PaletteOutlinedIcon from '@material-ui/icons/PaletteOutlined';\r\nimport AddAlertOutlinedIcon from '@material-ui/icons/AddAlertOutlined';\r\nimport MoreVertOutlinedIcon from '@material-ui/icons/MoreVertOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport NoteService from '../../Services/noteService';\r\nimport IconButtons from '../iconMenu/iconButtons'\r\nimport './addNote.css'\r\n\r\n\r\nconst service = new NoteService();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginRight: theme.spacing(1),\r\n\r\n    },\r\n    palette: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexFlow: 'wrap',\r\n        padding: '2px 2px 2px 2px',\r\n        width: '130px',\r\n        border: 'none',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(0.5),\r\n        borderRadius: \"50%\",\r\n        width: '5px',\r\n        height: '5px',\r\n    },\r\n}));\r\n\r\nexport default function AddNote() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const [noteContent, setNoteContent] = React.useState(true);\r\n    const [noteTitle, setNoteTitle] = React.useState(\"\");\r\n    const [noteDescription, setNoteDescription] = React.useState(\"\");\r\n\r\n    const [color, setColor] = React.useState(\"#fff\");\r\n\r\n    const handleColorChange = (value) => {\r\n        setColor(value);\r\n    }\r\n\r\n    const handleChange = () => {\r\n        setNoteContent(true);\r\n    }\r\n\r\n    const handleNoteTitle = (e) => {\r\n        setNoteTitle(e.target.value);\r\n    }\r\n\r\n    const handleNoteDescription = (e) => {\r\n        setNoteDescription(e.target.value);\r\n    }\r\n\r\n\r\n    // const handleClose = () => {\r\n    //     setNoteContent(false);\r\n    // }\r\n\r\n    // const handleChangeContent = (e) => {\r\n    //     const { name, value } = e.target;\r\n    //     setNote(prevNote => {\r\n    //         return {\r\n    //             ...prevNote,\r\n    //             [name]: value\r\n    //         };\r\n    //     });\r\n    // }\r\n\r\n    const save = (e) => {\r\n        e.preventDefault();\r\n        if (noteTitle.length === 0) {\r\n            setNoteContent(false);\r\n            setColor(\"#fff\");\r\n        } else {\r\n            console.log('note added', noteTitle, noteDescription);\r\n            \r\n            const noteData = new FormData();\r\n                noteData.set(\"title\", noteTitle);\r\n                noteData.set(\"description\", noteDescription);\r\n                noteData.set(\"color\",color);\r\n                \r\n            service.addNote(noteData, localStorage.getItem(\"userToken\")).then(data => {\r\n                console.log(data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n            setColor(\"#fff\");\r\n            setNoteContent(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"note-main\">\r\n            { !noteContent ?\r\n                <div className=\"first-field\">\r\n                    <InputBase\r\n                        onClick={handleChange}\r\n                        // className={classes.input}\r\n                        fullWidth\r\n                        placeholder=\"Take a note..\"\r\n                        inputProps={{ 'aria-label': 'text' }}\r\n                    />\r\n                    <IconButton >\r\n                        <CheckBoxOutlinedIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <BrushOutlinedIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ImageOutlinedIcon />\r\n                    </IconButton>\r\n                </div>\r\n                :\r\n                <div className=\"take-note\" >\r\n                    <div className=\"field-change\" style={{ backgroundColor: color  }} > \r\n                        <InputBase\r\n                            name=\"title\"\r\n                            onChange={handleNoteTitle}\r\n                            value={noteTitle}\r\n                            fullWidth\r\n                            placeholder=\"Title\"\r\n                            inputProps={{ 'aria-label': 'text' }}\r\n                        />\r\n                        <InputBase\r\n                            name=\"discription\"\r\n                            onChange={handleNoteDescription}\r\n                            value={noteDescription}\r\n                            multiline\r\n                            rowsMax={5}\r\n                            fullWidth\r\n                            placeholder=\"Take a note...\"\r\n                            inputProps={{ 'aria-label': 'text' }}\r\n                        />\r\n                        <div className=\"icon-buttons\">\r\n                                <IconButtons \r\n                                    handleColor={handleColorChange}\r\n                                />\r\n                            <div className=\"close-button\">\r\n                                <Button onClick={save} >\r\n                                    Close\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","H:\\ReactJs\\FundooNotes\\src\\component\\displayNote\\displayNote.jsx",[],"H:\\ReactJs\\FundooNotes\\src\\Services\\noteService.js",[],"H:\\ReactJs\\FundooNotes\\src\\component\\note\\note.jsx",[],"H:\\ReactJs\\FundooNotes\\src\\component\\iconMenu\\iconButtons.jsx",["97","98","99","100"],"H:\\ReactJs\\FundooNotes\\src\\component\\iconMenu\\moreMenu.jsx",["101","102","103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":291,"column":33,"nodeType":"111","endLine":291,"endColumn":65},{"ruleId":"109","severity":1,"message":"110","line":310,"column":37,"nodeType":"111","endLine":310,"endColumn":73},{"ruleId":"109","severity":1,"message":"110","line":325,"column":37,"nodeType":"111","endLine":325,"endColumn":80},{"ruleId":"112","severity":1,"message":"113","line":13,"column":25,"nodeType":"114","messageId":"115","endLine":13,"endColumn":29},{"ruleId":"112","severity":1,"message":"113","line":13,"column":39,"nodeType":"114","messageId":"115","endLine":13,"endColumn":43},{"ruleId":"116","severity":1,"message":"117","line":13,"column":39,"nodeType":"114","messageId":"118","endLine":13,"endColumn":43},{"ruleId":"116","severity":1,"message":"119","line":1,"column":10,"nodeType":"114","messageId":"118","endLine":1,"endColumn":17},{"ruleId":"116","severity":1,"message":"120","line":11,"column":8,"nodeType":"114","messageId":"118","endLine":11,"endColumn":16},{"ruleId":"116","severity":1,"message":"121","line":152,"column":9,"nodeType":"114","messageId":"118","endLine":152,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":243,"column":15,"nodeType":"111","endLine":243,"endColumn":40},{"ruleId":"116","severity":1,"message":"122","line":1,"column":17,"nodeType":"114","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"123","line":7,"column":8,"nodeType":"114","messageId":"118","endLine":7,"endColumn":27},{"ruleId":"116","severity":1,"message":"124","line":8,"column":8,"nodeType":"114","messageId":"118","endLine":8,"endColumn":29},{"ruleId":"116","severity":1,"message":"125","line":9,"column":8,"nodeType":"114","messageId":"118","endLine":9,"endColumn":27},{"ruleId":"116","severity":1,"message":"126","line":10,"column":8,"nodeType":"114","messageId":"118","endLine":10,"endColumn":28},{"ruleId":"116","severity":1,"message":"127","line":11,"column":8,"nodeType":"114","messageId":"118","endLine":11,"endColumn":28},{"ruleId":"116","severity":1,"message":"128","line":13,"column":8,"nodeType":"114","messageId":"118","endLine":13,"endColumn":12},{"ruleId":"116","severity":1,"message":"129","line":14,"column":22,"nodeType":"114","messageId":"118","endLine":14,"endColumn":30},{"ruleId":"116","severity":1,"message":"130","line":45,"column":11,"nodeType":"114","messageId":"118","endLine":45,"endColumn":18},{"ruleId":"116","severity":1,"message":"131","line":47,"column":22,"nodeType":"114","messageId":"118","endLine":47,"endColumn":33},{"ruleId":"116","severity":1,"message":"132","line":48,"column":11,"nodeType":"114","messageId":"118","endLine":48,"endColumn":21},{"ruleId":"116","severity":1,"message":"122","line":1,"column":17,"nodeType":"114","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"129","line":9,"column":22,"nodeType":"114","messageId":"118","endLine":9,"endColumn":30},{"ruleId":"116","severity":1,"message":"133","line":66,"column":12,"nodeType":"114","messageId":"118","endLine":66,"endColumn":17},{"ruleId":"116","severity":1,"message":"134","line":66,"column":19,"nodeType":"114","messageId":"118","endLine":66,"endColumn":27},{"ruleId":"116","severity":1,"message":"122","line":1,"column":17,"nodeType":"114","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"129","line":6,"column":22,"nodeType":"114","messageId":"118","endLine":6,"endColumn":30},{"ruleId":"109","severity":1,"message":"110","line":46,"column":13,"nodeType":"111","endLine":46,"endColumn":32},{"ruleId":"109","severity":1,"message":"110","line":47,"column":13,"nodeType":"111","endLine":47,"endColumn":24},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-const-assign","'auth' is constant.","Identifier","const","no-unused-vars","'auth' is assigned a value but never used.","unusedVar","'Divider' is defined but never used.","'MenuItem' is defined but never used.","'theme' is assigned a value but never used.","'useState' is defined but never used.","'ArchiveOutlinedIcon' is defined but never used.","'PersonAddOutlinedIcon' is defined but never used.","'PaletteOutlinedIcon' is defined but never used.","'AddAlertOutlinedIcon' is defined but never used.","'MoreVertOutlinedIcon' is defined but never used.","'Menu' is defined but never used.","'useTheme' is defined but never used.","'classes' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'isMenuOpen' is assigned a value but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]