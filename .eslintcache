[{"H:\\ReactJs\\registration-app\\src\\index.js":"1","H:\\ReactJs\\registration-app\\src\\App.js":"2","H:\\ReactJs\\registration-app\\src\\reportWebVitals.js":"3","H:\\ReactJs\\registration-app\\src\\component\\registration\\registration.jsx":"4","H:\\ReactJs\\registration-app\\src\\component\\login\\login.jsx":"5","H:\\ReactJs\\registration-app\\src\\component\\forgotPassword\\forgotPassword.jsx":"6","H:\\ReactJs\\registration-app\\src\\Services\\userService.js":"7","H:\\ReactJs\\registration-app\\src\\Services\\axiosService.js":"8","H:\\ReactJs\\registration-app\\src\\component\\resetPassword\\resetPassword.jsx":"9","H:\\ReactJs\\registration-app\\src\\component\\snackbar\\snackbar.jsx":"10","H:\\ReactJs\\registration-app\\src\\component\\addNote\\addNote.jsx":"11","H:\\ReactJs\\registration-app\\src\\component\\dashboard\\dashboard.jsx":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":960,"mtime":1609845382036,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":14701,"mtime":1609751895831,"results":"17","hashOfConfig":"14"},{"size":5690,"mtime":1609394712840,"results":"18","hashOfConfig":"14"},{"size":3496,"mtime":1609395362708,"results":"19","hashOfConfig":"14"},{"size":745,"mtime":1609314118880,"results":"20","hashOfConfig":"14"},{"size":188,"mtime":1609312747089,"results":"21","hashOfConfig":"14"},{"size":5175,"mtime":1609395327113,"results":"22","hashOfConfig":"14"},{"size":1073,"mtime":1609510156599,"results":"23","hashOfConfig":"14"},{"size":8038,"mtime":1609947963619,"results":"24","hashOfConfig":"14"},{"size":8550,"mtime":1609946286400,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1yet0md",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\ReactJs\\registration-app\\src\\index.js",[],["52","53"],"H:\\ReactJs\\registration-app\\src\\App.js",[],"H:\\ReactJs\\registration-app\\src\\reportWebVitals.js",[],"H:\\ReactJs\\registration-app\\src\\component\\registration\\registration.jsx",["54","55","56"],"import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './registration.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport 'fontsource-roboto';\r\nimport UserService from '../../Services/userService';\r\nimport { Link } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst service = new UserService();\r\n\r\nexport default class registration extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            firstName: \"\",\r\n            firstNameErr: false,\r\n            firstNameMsg: \"\",\r\n            lastName: \"\",\r\n            lastNameErr: false,\r\n            lastNameMsg: \"\",\r\n            email: \"\",\r\n            emailErr: false, \r\n            emailMsg: \"\",\r\n            password: \"\",\r\n            passwordErr: false,\r\n            passwordMsg: \"\",\r\n            confirmPassword: \"\",\r\n            confirmPasswordErr: false,\r\n            confirmPasswordMsg: \"\",\r\n            hidden: true,\r\n            snackbarOpen: false,\r\n            snackbarMsg: \"\"\r\n        };\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleConfirmPasswordChange = this.handleConfirmPasswordChange.bind(this);\r\n        this.toggleShow = this.toggleShow.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) =>{\r\n        this.setState({snackbarOpen:false})\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    validate = () => {\r\n        this.setState({\r\n            firstNameErr: false,\r\n            firstNameMsg: \"\",\r\n            lastNameErr: false,\r\n            lastNameMsg: \"\",         \r\n            emailErr: false, \r\n            emailMsg: \"\",\r\n            passwordErr: false,\r\n            passwordMsg: \"\",\r\n            confirmPasswordErr: false,\r\n            confirmPasswordMsg: \"\",\r\n        })\r\n\r\n        let isValid = false\r\n\r\n        const firstNameRegex = new RegExp(/^[A-Z]{1}[a-zA-Z]{2,}$/);\r\n        if(this.state.firstName.length > 0 && !firstNameRegex.test(this.state.firstName)){\r\n            this.setState({\r\n                firstNameErr: true,\r\n                firstNameMsg: 'First name Invalid'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        if(this.state.firstName.length === 0 ){\r\n            this.setState({\r\n                firstNameErr: true,\r\n                firstNameMsg: 'Required'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        const lastNameRegex = new RegExp(/^[A-Z]{1}[a-zA-Z]{2,}$/);\r\n        if(this.state.lastName.length > 0 && !lastNameRegex.test(this.state.lastName)){\r\n            this.setState({\r\n                lastNameErr: true,\r\n                lastNameMsg: 'Last name invalid'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        if(this.state.lastName.length === 0 ){\r\n            this.setState({\r\n                lastNameErr: true,\r\n                lastNameMsg: 'Required'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        const emailRegex = new RegExp(/^([A-Za-z0-9]){2,}([.]?)([A-Za-z0-9]){2,}@([a-z])+([.][a-z]{2,})+$/);\r\n        if(this.state.email.length > 0 && !emailRegex.test(this.state.email)){\r\n            this.setState({\r\n                emailErr: true,\r\n                emailMsg: 'Invalid Email'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        if(this.state.email.length === 0 ){\r\n            this.setState({\r\n                emailErr: true,\r\n                emailMsg: 'Required'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        const passwordRegex = RegExp(/^(?=.+[0-9])(?=.+[a-z])(?=.+[!@#$%^&*])(?=.+[A-Z])(?=.*[a-zA-Z]).{8,}/);\r\n        if(this.state.password.length > 0 && !passwordRegex.test(this.state.password)){\r\n            this.setState({\r\n                passwordErr: true,\r\n                passwordMsg: 'Follow password rules'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        if(this.state.password.length === 0){\r\n            this.setState({\r\n                passwordErr: true,\r\n                passwordMsg: 'Required'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        const confirmPasswordRegex = RegExp(/^(?=.+[0-9])(?=.+[a-z])(?=.+[!@#$%^&*])(?=.+[A-Z])(?=.*[a-zA-Z]).{8,}/);\r\n        if(this.state.confirmPassword.length > 0 && !confirmPasswordRegex.test(this.state.confirmPassword)){\r\n            this.setState({\r\n                confirmPasswordErr: true,\r\n                confirmPasswordMsg: \"Follow password rules\"\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        if(this.state.confirmPassword.length === 0){\r\n            this.setState({\r\n                confirmPasswordErr: true,\r\n                confirmPasswordMsg: 'Required'\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        if(this.state.password !== this.state.confirmPassword){\r\n            this.setState({\r\n                confirmPasswordErr:true,\r\n                confirmPasswordMsg: 'Password Mismatch'\r\n            })\r\n            isValid= true\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    submit = (event) =>{\r\n        // event.preventDefault();\r\n        if(this.validate()){\r\n            console.log('Registration failed');\r\n            \r\n        }else{\r\n           \r\n            console.log('Registration Sucessful', this.state.firstName, this.state.lastName, this.state.email, this.state.password, this.state.confirmPassword);\r\n            let userData = {\r\n                \"firstName\" : this.state.firstName,\r\n                \"lastName\" : this.state.lastName,\r\n                \"email\" : this.state.email,\r\n                \"password\": this.state.password,\r\n                \"service\": \"advanced\"\r\n            }\r\n            service.registration(userData)\r\n            .then(data => {\r\n                \r\n                console.log(data);\r\n                this.props.history.push(\"/login\");\r\n                this.setState({snackbarOpen: true, snackbarMsg: 'Registered Successfully!'})\r\n                \r\n            })\r\n            .catch(error =>{\r\n                \r\n                console.log(error);   \r\n                this.setState({snackbarOpen: true, snackbarMsg: 'Failed!'})\r\n            }) \r\n        }\r\n    }\r\n\r\n    handleConfirmPasswordChange(e){\r\n        this.setState({ confirmPassword: e.target.value});\r\n    }\r\n\r\n    handlePasswordChange(e) {\r\n        this.setState({ password: e.target.value });\r\n        \r\n    }\r\n    \r\n    toggleShow() {\r\n        this.setState({ hidden: !this.state.hidden });\r\n      }\r\n    \r\n    componentDidMount() {\r\n        if (this.props.password) {\r\n          this.setState({ password: this.props.password });\r\n        }\r\n        if (this.props.confirmPassword) {\r\n            this.setState({confirmPassword: this.props.confirmPassword});\r\n          }\r\n      }\r\n\r\n    \r\n\r\n    render(){ \r\n        return (\r\n            <div className=\"parent\">\r\n            <Snackbar\r\n                // anchorOrigin={{vertical:'center', horizontal:'left'}}\r\n                open = {this.state.snackbarOpen} \r\n                autoHideDuration = {3000}\r\n                onClose = {this.snackbarClose}\r\n                message ={<span id=\"message-id\">{this.state.snackbarMsg}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        arial-label=\"close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.snackbarClose}\r\n                    >\r\n                        x\r\n                    </IconButton>\r\n                ]}\r\n            />\r\n                <div className=\"child1\">\r\n                    <div className=\"heading\">  \r\n                    <span className=\"letter1\">F</span>\r\n                    <span className=\"letter2\">u</span>\r\n                    <span className=\"letter3\">n</span>\r\n                    <span className=\"letter4\">d</span>\r\n                    <span className=\"letter5\">o</span>\r\n                    <span className=\"letter6\">o</span>\r\n                    </div>\r\n                    <div className=\"textalign\">\r\n                        <span className=\"heading-second\">Create your Fundoo Account</span>\r\n                    </div>\r\n                    <form onSubmit={this.submit}>\r\n                        <div className=\"fields\">\r\n                                <TextField \r\n                                    type=\"text\"\r\n                                    className=\"mr\" \r\n                                    id=\"outlined-basic\" \r\n                                    label=\"First name\" \r\n                                    variant=\"outlined\" \r\n                                    size=\"small\" \r\n                                    name=\"firstName\" \r\n                                    onChange={this.handleChange}\r\n                                    error={this.state.firstNameErr}\r\n                                    helperText={this.state.firstNameMsg}\r\n\r\n                                />    \r\n                            <div className=\"mr2\">    \r\n                                <TextField\r\n                                    className=\"second-field\" \r\n                                    type=\"text\"\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Last name\" \r\n                                    variant=\"outlined\" \r\n                                    size=\"small\" \r\n                                    name=\"lastName\"\r\n                                    onChange={this.handleChange}\r\n                                    error={this.state.lastNameErr}\r\n                                    helperText={this.state.lastNameMsg}\r\n                                />                            \r\n                            </div>    \r\n                        </div>\r\n                        <div className=\"fields email-content\">\r\n                            <TextField \r\n                                id=\"outlined-full-width\" \r\n                                label=\"Your email address\" \r\n                                fullWidth variant=\"outlined\" \r\n                                size=\"small\" \r\n                                helperText=\"You can use letters, numbers & periods\" \r\n                                name=\"email\"\r\n                                onChange={this.handleChange}\r\n                                error={this.state.emailErr}\r\n                                helperText={this.state.emailMsg}\r\n                            />\r\n                            <div>\r\n                                <small>You can use letters, numbers & periods</small>\r\n                            </div>\r\n                        </div>                        \r\n                        <div className=\"fields\">   \r\n                                <TextField \r\n                                    className=\"mr\" \r\n                                    type={this.state.hidden ? 'text' : 'password'}\r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Password\" \r\n                                    variant=\"outlined\"\r\n                                    size=\"small\" \r\n                                    name=\"password\"\r\n                                    onChange={this.handleChange}\r\n                                    error={this.state.passwordErr}\r\n                                    helperText={this.state.passwordMsg}\r\n                                    value={this.state.password}\r\n                                    onChange={this.handlePasswordChange}\r\n                                />                         \r\n                            <div className=\"mr2\">    \r\n                                <TextField\r\n                                    className=\"second-field\"                                    \r\n                                    id=\"outlined-basic\" \r\n                                    type={this.state.hidden ? 'text' : 'password'}\r\n                                    label=\"Confirm\" \r\n                                    variant=\"outlined\" \r\n                                    size=\"small\" \r\n                                    name=\"confirmPassword\"\r\n                                    onChange={this.handleChange}\r\n                                    error={this.state.confirmPasswordErr}\r\n                                    helperText={this.state.confirmPasswordMsg}\r\n                                    value={this.state.confirmPassword}\r\n                                    onChange={this.handleConfirmPasswordChange}\r\n                                />                            \r\n                            </div>    \r\n                        </div>\r\n                        <div className=\"password\">\r\n                            <span>\r\n                                Use 8 or more characters with a mix of letters, numbers & symbols\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"checkbox\">\r\n                            <div>\r\n                                <Checkbox\r\n                                    className=\"checkbox\"\r\n                                    defaultChecked\r\n                                    color=\"primary\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    onClick={this.toggleShow}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <span>Show password</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"button\">\r\n                            <Button component={Link} to=\"/login\" href=\"#text-buttons\" color=\"primary\" >\r\n                                Sign in instead\r\n                            </Button>                \r\n                            <Button type=\"submit\" className=\"submit-btn\" variant=\"contained\" color=\"primary\" onClick={this.submit}>\r\n                                submit\r\n                            </Button>\r\n                            <Snackbar />\r\n                        </div>   \r\n                    </form>\r\n                </div>\r\n                <div className=\"child2\">\r\n                    <div>\r\n                        <img src=\"/images/account.svg\" alt=\"\"  width=\"244\" height=\"244\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }   \r\n}\r\n\r\n\r\n","H:\\ReactJs\\registration-app\\src\\component\\login\\login.jsx",[],"H:\\ReactJs\\registration-app\\src\\component\\forgotPassword\\forgotPassword.jsx",[],"H:\\ReactJs\\registration-app\\src\\Services\\userService.js",[],"H:\\ReactJs\\registration-app\\src\\Services\\axiosService.js",[],"H:\\ReactJs\\registration-app\\src\\component\\resetPassword\\resetPassword.jsx",[],"H:\\ReactJs\\registration-app\\src\\component\\snackbar\\snackbar.jsx",["57","58"],"H:\\ReactJs\\registration-app\\src\\component\\addNote\\addNote.jsx",["59","60","61","62","63","64","65","66"],"H:\\ReactJs\\registration-app\\src\\component\\dashboard\\dashboard.jsx",["67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":293,"column":33,"nodeType":"75","endLine":293,"endColumn":65},{"ruleId":"73","severity":1,"message":"74","line":312,"column":37,"nodeType":"75","endLine":312,"endColumn":73},{"ruleId":"73","severity":1,"message":"74","line":327,"column":37,"nodeType":"75","endLine":327,"endColumn":80},{"ruleId":"76","severity":1,"message":"77","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"76","severity":1,"message":"80","line":24,"column":9,"nodeType":"78","messageId":"79","endLine":24,"endColumn":20},{"ruleId":"76","severity":1,"message":"81","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":17},{"ruleId":"76","severity":1,"message":"82","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":22},{"ruleId":"76","severity":1,"message":"83","line":10,"column":10,"nodeType":"78","messageId":"79","endLine":10,"endColumn":18},{"ruleId":"76","severity":1,"message":"84","line":16,"column":8,"nodeType":"78","messageId":"79","endLine":16,"endColumn":24},{"ruleId":"76","severity":1,"message":"85","line":17,"column":8,"nodeType":"78","messageId":"79","endLine":17,"endColumn":24},{"ruleId":"76","severity":1,"message":"86","line":19,"column":8,"nodeType":"78","messageId":"79","endLine":19,"endColumn":16},{"ruleId":"76","severity":1,"message":"87","line":21,"column":22,"nodeType":"78","messageId":"79","endLine":21,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":131,"column":33,"nodeType":"75","endLine":131,"endColumn":58},{"ruleId":"76","severity":1,"message":"88","line":146,"column":9,"nodeType":"78","messageId":"79","endLine":146,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":216,"column":15,"nodeType":"75","endLine":216,"endColumn":40},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'handleClick' is assigned a value but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'useState' is defined but never used.","'UndoOutlinedIcon' is defined but never used.","'RedoOutlinedIcon' is defined but never used.","'MenuItem' is defined but never used.","'useTheme' is defined but never used.","'theme' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]